{% extends "forms/field.html.twig" %}

{% set config = grav.config %}
{% set site_key = field.turnstile_site_key ?? config.plugins.form.turnstile.site_key %}
{% set theme = field.theme ?? config.plugins.form.turnstile.theme ?? 'light' %}
{% set formId = form.id %} {# Ensure formId is available #}
{% set turnstileContainerId = 'cf-turnstile-' ~ formId %}

{% block label %}{% endblock %}

{% block input %}
  {% do assets.addJs('https://challenges.cloudflare.com/turnstile/v0/api.js', { 'loading': 'async', 'defer': '' }) %}

  <div class="turnstile">
    <div id="{{ turnstileContainerId }}"
         class="cf-turnstile-container"
         data-captcha-provider="turnstile"
         data-sitekey="{{ site_key }}"
         data-theme="{{ theme }}">
         {# Content will be rendered here by JS #}
    </div>
  </div>

  <script type="application/javascript">
    (function() {
      window.GravTurnstileInitializers = window.GravTurnstileInitializers || {};

      const initializerFunctionName = 'initTurnstile_{{ formId }}';

      window.GravTurnstileInitializers[initializerFunctionName] = function() {
        const containerId = '{{ turnstileContainerId }}';
        const container = document.getElementById(containerId);

        if (!container) {
          console.warn('Turnstile container #' + containerId + ' not found.');
          return;
        }

        // Important: Always clear and recreate the widget on reinit
        container.innerHTML = '';

        const sitekey = container.dataset.sitekey;
        const theme = container.dataset.theme;

        if (!sitekey) {
            console.error('Turnstile sitekey not found for container #' + containerId);
            return;
        }

        // Wait a moment to ensure the Turnstile API is loaded
        const renderWidget = function() {
          if (typeof window.turnstile !== 'undefined') {
            try {
              window.turnstile.render('#' + containerId, {
                sitekey: sitekey,
                theme: theme,
                callback: function(token) {
                    // Success callback
                },
                'expired-callback': function() {
                    console.log('Turnstile token expired for #' + containerId);
                },
                'error-callback': function(errorCode) {
                    console.error('Turnstile error ('+ errorCode +') for #' + containerId);
                    container.innerHTML = '<p style="color:red;">Could not load verification challenge.</p>';
                }
              });
            } catch (e) {
               console.error('Error calling turnstile.render for #' + containerId, e);
               container.innerHTML = '<p style="color:red;">Error initializing verification challenge.</p>';
            }
          } else {
            // Retry if API not available yet
            setTimeout(renderWidget, 100);
          }
        };

        renderWidget();
      };

      // Run initializer when the script loads
      if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', function() {
              setTimeout(window.GravTurnstileInitializers[initializerFunctionName], 100);
          });
      } else {
          setTimeout(window.GravTurnstileInitializers[initializerFunctionName], 100);
      }
    })();
  </script>
{% endblock %}